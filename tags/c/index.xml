<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>C on araboud.ca</title><link>https://araboud.ca/tags/c/</link><description>Recent content in C on araboud.ca</description><generator>Hugo -- gohugo.io</generator><copyright>Copyright © 2008–2021, Alex Raboud; all rights reserved.</copyright><lastBuildDate>Thu, 25 Feb 2021 00:00:00 -0700</lastBuildDate><atom:link href="https://araboud.ca/tags/c/index.xml" rel="self" type="application/rss+xml"/><item><title>Fish Light Control</title><link>https://araboud.ca/projects/fish-light-control/</link><pubDate>Thu, 25 Feb 2021 00:00:00 -0700</pubDate><guid>https://araboud.ca/projects/fish-light-control/</guid><description>
&lt;p>This was a quick project to have an esp32 control a light strip over our fish tank. It was nice to keep the scope small and finish it off in a few days. Our aquarium had a small LED strip light on a rocker switch and I had just picked up a length of WS2812 addressable LED, so this seemed like a good opportunity to try them out.&lt;/p>
&lt;p>I debated on using a Raspberry Pi Zero and look at integrating it as a IOT device, but I ended up going pretty minimalist by making it all timer based with an esp32 dev kit. I put together a schematic and design in Eagle CAD. This makes for good practice and it tends to save soldering re-work when I have a good diagram to work with.&lt;/p>
&lt;p>&lt;img src="https://araboud.ca/imgs/fishlightcontrol/FishControlBoard.png" alt="Drawing of board from Eagle CAD">&lt;/p>
&lt;p>The WS2812 strip runs on 5v and the esp32 data is 3.3v so I needed a level shifter. The data rate is pretty quick at 800khz so a simple level shifter wouldn't do the trick. Apparently I might have gotten away with just using 3.3v data, but I ended up getting an inverter (SN74HCT04N) instead to shift to 5v. GPIO 17 on the esp32 goes to the first input, the inverted signal loops back to its second input, and the second output is the right polarity and voltage for the lights, saving me needing to invert it in software.&lt;/p>
&lt;p>&lt;img src="https://araboud.ca/imgs/fishlightcontrol/FishControlBoardSoldered.png" alt="Soldered prototype board">&lt;/p>
&lt;p>It was a bit greedy to skip a full breadboard setup, but the circuit was simple enough that I could jump to a prototype board like this. It turned out okay with the only real changes being the added pullup resistor and a different style connector for the LED strip.&lt;/p>
&lt;p>Next I wrote &lt;a href="https://github.com/ataboo/fish-light-control">the software to drive the controller&lt;/a> using ESP-IDF. Lucky for me, they had a WS2812 example for the RMT library so it was pretty straight forward to implement. I set it up to startup the WIFI every 24 hours and update the clock and update the color according to the time every minute. A noon color is set and it ramps up and down during the configured sunrise/sunset periods. I was impressed how easy it was to sleep and wake in esp-idf. I could definately see this being a good option for battery powered projects.&lt;/p>
&lt;p>Next I designed a case for the board in Fusion and found a couple nice SVGs to represent the 2 end users.&lt;/p>
&lt;p>&lt;img src="https://araboud.ca/imgs/fishlightcontrol/FishControlCasePrinted.png" alt="3d Printed case for the control board">&lt;/p>
&lt;p>I printed the case in wood PLA and everything fit pretty well.&lt;/p>
&lt;p>One thing I ran into was the lights flickering colours sometimes when I would handle the board. After trying a few things, I ended up fixing it by adding an external pull-down resistor between the GPIO and the inverter.&lt;/p>
&lt;p>&lt;img src="https://araboud.ca/imgs/fishlightcontrol/FishControlLightAndController.png" alt="The LED strip and controller">&lt;/p>
&lt;p>Overall was a nice quick project. I look forward to coming up with new uses for the WS2812s.&lt;/p>
&lt;p>&lt;a href="https://github.com/ataboo/fish-light-control">fish-light-control on Github&lt;/a>&lt;/p>
&lt;p>&lt;strong>Update: 2021-03-14&lt;/strong>&lt;/p>
&lt;p>The original light seems to work great and it's nice to be able to tune the tone and brightness. It seems like stock lights are more about showing off the fish but that kind of brightness has to be annoying for them. We ended up getting 3 new fish and tanks, so I've cleaned up the PCB a bit to have a few boards manufactured.&lt;/p>
&lt;p>&lt;img src="https://araboud.ca/imgs/fishlightcontrol/FishLightBoard_v1.0_render.png" alt="A render of the breakout board sent to manufacturing">&lt;/p>
&lt;p>The only major change is trying out the holes for strain relief and direct soldering to the board.&lt;/p></description></item><item><title>Pandion VTOL Drone</title><link>https://araboud.ca/projects/pandion_overview/</link><pubDate>Sun, 13 Sep 2020 00:00:00 -0600</pubDate><guid>https://araboud.ca/projects/pandion_overview/</guid><description>
&lt;p>I have started getting into R/C aircraft recently and have been building a small twin rotor VTOL. The eventual plan is for it to be an aerial imaging platform that doesn't need a runway for launch and retrieval. For now, just getting it to hover stably has been quite the challenge.&lt;/p>
&lt;h2 id="configuration">Configuration&lt;/h2>
&lt;p>Initially I had planned on this being a tri-copter with even distribution and forward sweeping wings on conversion, but this had a lot of un-needed complexity and the cost of the rear engine would be high.&lt;/p>
&lt;p>&lt;img src="https://araboud.ca/imgs/pandion/PandionAssemblyRender.png" alt="Latest rendering of Pandion VTOL">&lt;/p>
&lt;p>The main concern was to put the C of G in the right positionon during forward flight and being able to balance while hovering. I've been getting more comfortable with Fusion 360 and it is an amazing tool to work with. I took the time to add the approximate weight of materials and the balance and weight was quite close in the finished product.&lt;/p>
&lt;p>The latest configuration is pretty close to a V-22 Osprey so the genus Pandion seemed like an appropriate name. The ducted fan in the rear is purely for pitch control so I would consider it a bi-copter.&lt;/p>
&lt;p>I've seen other bi-copters that will balance 2 axes, but it has been nice to have one control motion per axis with the ducted fan handling pitch. Initially, I used small geared motors with encoders, but I had difficulty getting them to run consistently.&lt;/p>
&lt;p>&lt;img src="https://araboud.ca/imgs/pandion/early_rotary_encoder.png" alt="Early wing design using geared motors">&lt;/p>
&lt;p>9g servos in the nacelles provide yaw control when hovering and role control in forward flight.&lt;/p>
&lt;h2 id="materials">Materials&lt;/h2>
&lt;p>You'll notice I originally used a carbon fibre main-spar and the axle for the nacelle. The extruded tube I used originally tended to crack and I had much better results with a proper weaved fibre tube later on. In early versions, I also used aluminum tig wire in combination as stringers in the wing. Later designs used aluminum c-channel for the main spar and a wooden rear spar which provide plenty of support.&lt;/p>
&lt;p>&lt;img src="https://araboud.ca/imgs/pandion/channel_wing.png" alt="Channel wing construction">&lt;/p>
&lt;p>9g servos controlled the nacelle pitch and fine engine pitch control. While testing, I stripped a few nylon gear servos since the nacelles are quite front heavy. After replacing them with metal-gear servos, there hasn't been any problems. PLA has worked well for the wing ribs and various pieces. At some point, I may try out foam filament.&lt;/p>
&lt;h2 id="electronics">Electronics&lt;/h2>
&lt;p>I've used an MPU-6050 gyro, a FlySky receiver, 3 small ESCs, 3 buck-converters, and an ESP-32 to control everything. A flight controller would have made things easier, but part of the challenge was writing the software from scratch. Also there is not a lot of control software that will change between configurations at run-time.&lt;/p>
&lt;p>&lt;img src="https://araboud.ca/imgs/pandion/control_board.png" alt="Control Board">&lt;/p>
&lt;p>I then mounted the control board to the wing on a pivoting test stand to help develop the control software.&lt;/p>
&lt;p>&lt;img src="https://araboud.ca/imgs/pandion/test_stand.gif" alt="GIF of wing on test stand">&lt;/p>
&lt;p>Foam core with hot glue has been great to use for the wing covering and fuselage. It's easy and quick to work with when prototyping like this.&lt;/p>
&lt;h2 id="software">Software&lt;/h2>
&lt;p>The &lt;a href="github.com/ataboo/pandion">Pandion VTOL&lt;/a> repo has all the software for the project. Early on, I used some arduino sketches, but I've found ESP-IDF is easier to develop for a project like this.&lt;/p>
&lt;p>The gyro is read over I&lt;sup>2&lt;/sup>C so this was fairly easy to implement. I ended up polling periodically, but I may look into using interrupts at some point.&lt;/p>
&lt;p>I managed to reverse engineer the FlySky receiver with the help of a logic analyzer. Currently I'm providing the battery voltage as a sensor with a simple voltage divider, but the ground-work is there in-case I need more. The channel values are read on another pin digitally.&lt;/p>
&lt;p>&lt;img src="https://araboud.ca/imgs/pandion/ibus_sensor_still.png" alt="I-Bus sensor output on receiver">&lt;/p>
&lt;p>Getting d-shot to work for the ESCs was a little tricky, but the logic analyzer and the output from a flight controller helped me tune the timing. I flashed the rear ESC with BL Heli to make it reversable.&lt;/p>
&lt;p>I've implemented a PID controller with a positive and neutral stability mode. I then wrote a tcp server so the ESP-32 acts as a WiFi hot-spot, for updating values remotely. I then created a &lt;a href="https://github.com/ataboo/pandion-tcp-client">client in fyne&lt;/a> to send commands and this has made tuning the PID values much easier.&lt;/p>
&lt;h2 id="will-it-fly">Will it Fly?&lt;/h2>
&lt;p>&lt;img src="https://araboud.ca/imgs/pandion/pandion_flight_min.gif" alt="Basement flight test">&lt;/p>
&lt;p>The stability needs some work, but the power to weight to weight is plenty.&lt;/p>
&lt;p>&lt;img src="https://araboud.ca/imgs/pandion/garage_test.png" alt="Garage Test">&lt;/p>
&lt;p>I will keep tuning the controls until I feel confident in its ability to hold station. Once that is done, I should be able to tune for forward flight with the safety net of hovering.&lt;/p></description></item></channel></rss>